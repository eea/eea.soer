======================
SENSE input and output
====================== 

SENSE is a sub project of SOER PART-C which has a goal to enable information
sharing between countries using RDF. The content shared is the PART-C of SOER
and is intended as first stage to put more data online and be able to update it
continuesly.

All content as part of eea.soer can be imported and exported as `SOER Feed <https://svn.eionet.europa.eu/projects/Zope/wiki/SOERFeedSpec>`_.

  >>> self.setRoles(['Manager'])
  >>> soer = self.portal.SOER
  >>> country = soer[soer.invokeFactory('SOERCountry', id='no')]
  >>> from eea.soer.tests.base import examplerdf, evalrdf
    
Lets load an RDF

  >>> import surf
  >>> from eea.soer import sense
  >>> store = surf.Store(reader='rdflib',  writer='rdflib', rdflib_store = 'IOMemory')
  >>> session = surf.Session(store, mapping={surf.ns.SOER.NationalStory : sense.NationalStory} )
  >>> store.load_triples(source=examplerdf)
  True
  >>> country.setRdfFeed(examplerdf)
  >>> _ = country.updateFromFeed()

Lets try our evaluation vocabulary

  >>> store.load_triples(source=evalrdf)
  True
  >>> Evaluation = session.get_class(surf.ns.SOEREVALUATION['Evaluation'])
  >>> for i in Evaluation.all().order():
  ...   print i.subject
  http://www.eea.europa.eu/soer/evaluations#FV
  http://www.eea.europa.eu/soer/evaluations#U1
  http://www.eea.europa.eu/soer/evaluations#U1+
  http://www.eea.europa.eu/soer/evaluations#U1-
  http://www.eea.europa.eu/soer/evaluations#U2
  http://www.eea.europa.eu/soer/evaluations#U2+
  http://www.eea.europa.eu/soer/evaluations#U2-
  http://www.eea.europa.eu/soer/evaluations#XX

Plone to RDF

  >>> from zope.component import getMultiAdapter
  >>> print getMultiAdapter((country, country.REQUEST), name = u'rdf')()
  ...

  >>> NationalStory = session.get_class(surf.ns.SOER['NationalStory'])
  >>> obj = country['air-pollution-why-care-norway']
  >>> foo = obj.invokeFactory('RelatedIndicatorLink', id='indi1')
  >>> obj.indi1.setTitle('Related indicator')

  >>> ns = NationalStory(obj.absolute_url())
  >>> ns.bind_namespaces(['SOER'])
  >>> ns.session = session
  >>> ns.subject
  rdflib.URIRef('http://nohost/plone/SOER/no/air-pollution-why-care-norway')
  >>> ns.at2surf(obj, session)
  >>> ns.save()
  >>> session.commit()

Serialization
  >>> store.reader.graph.bind('','http://www.eea.europa.eu/soer/1.0#', override=True)
  >>> graph = store.reader.graph
  >>> print graph.serialize(format = "pretty-xml")
